{"ast":null,"code":"function searchByProperty(jsonData, searchValue, propertyName, contentTypeFilter) {\n  if (!jsonData) {\n    return undefined; // Return an empty array if jsonData is not iterable\n  }\n\n  const results = [];\n  function traverse(data) {\n    for (const item of data) {\n      if (propertyName === 'name' && searchValue && item[propertyName].toString().toLowerCase().includes(searchValue.toLowerCase())) {\n        results.push(item);\n      } else if (propertyName === 'size' && searchValue) {\n        const size = item.size;\n        if (size < parseInt(searchValue, 10)) {\n          results.push(item);\n        }\n      } else if (contentTypeFilter !== 'default' && item !== null && item !== void 0 && item.contentType && contentTypeFilter === (item === null || item === void 0 ? void 0 : item.contentType)) {\n        results.push(item);\n      } else if (!searchValue && (contentTypeFilter === 'default' || contentTypeFilter === undefined)) {\n        results.push(item);\n      }\n      if (item.contents && item.contents.length > 0) {\n        // Only continue traversing if a match hasn't been found\n        if (!results.includes(item)) {\n          traverse(item.contents);\n        }\n      }\n    }\n  }\n  traverse(jsonData.contents);\n  return {\n    name: jsonData.name,\n    size: jsonData.size,\n    contents: results,\n    isDir: true\n  }; // Turn search back to DirectoryInfo type\n}\n\n// Export function as a property of utils object\nexport const utils = {\n  searchByProperty\n};","map":{"version":3,"names":["searchByProperty","jsonData","searchValue","propertyName","contentTypeFilter","undefined","results","traverse","data","item","toString","toLowerCase","includes","push","size","parseInt","contentType","contents","length","name","isDir","utils"],"sources":["/Users/emilio.padilla/Library/Mobile Documents/com~apple~CloudDocs/Documents/Trabajo/PredictAP/takehome/FrontEnd-React/src/utils/utils.ts"],"sourcesContent":["import { DirectoryInfo, FileInfo, Item } from '../types/index';\n\nfunction searchByProperty(\n  jsonData: DirectoryInfo | undefined,\n  searchValue: string | null,\n  propertyName: 'size' | 'name' | undefined, \n  contentTypeFilter?: string, \n  ): DirectoryInfo | undefined {\n  if (!jsonData) {\n    return undefined; // Return an empty array if jsonData is not iterable\n  }\n\n  const results: Item[] = [];\n\n  function traverse(data: Item[] | undefined) {\n    for (const item of data!) {\n      \n      if (\n        propertyName === 'name' && \n        searchValue && \n        item[propertyName].toString().toLowerCase().includes(searchValue.toLowerCase())) {\n        results.push(item);\n      } else if (propertyName === 'size' && searchValue) {\n        const size = item.size as number;\n        if (size < parseInt(searchValue, 10)) {\n          results.push(item);\n        }\n      } else if (contentTypeFilter !== 'default' && item?.contentType && contentTypeFilter === item?.contentType) {\n        results.push(item);\n      } else if (!searchValue && (contentTypeFilter === 'default' || contentTypeFilter === undefined)) {\n        results.push(item);\n      }\n\n      if (item.contents && item.contents.length > 0) {\n        // Only continue traversing if a match hasn't been found\n        if (!results.includes(item)) {\n          traverse(item.contents);\n        }\n      }\n    }\n  }\n\n  traverse(jsonData.contents);\n  return { \n    name: jsonData.name, \n    size: jsonData.size, \n    contents: results as (DirectoryInfo | FileInfo)[],\n    isDir: true\n  }; // Turn search back to DirectoryInfo type\n}\n\n// Export function as a property of utils object\nexport const utils = {\n  searchByProperty,\n};"],"mappings":"AAEA,SAASA,gBAAgBA,CACvBC,QAAmC,EACnCC,WAA0B,EAC1BC,YAAyC,EACzCC,iBAA0B,EACG;EAC7B,IAAI,CAACH,QAAQ,EAAE;IACb,OAAOI,SAAS,CAAC,CAAC;EACpB;;EAEA,MAAMC,OAAe,GAAG,EAAE;EAE1B,SAASC,QAAQA,CAACC,IAAwB,EAAE;IAC1C,KAAK,MAAMC,IAAI,IAAID,IAAI,EAAG;MAExB,IACEL,YAAY,KAAK,MAAM,IACvBD,WAAW,IACXO,IAAI,CAACN,YAAY,CAAC,CAACO,QAAQ,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,WAAW,CAACS,WAAW,CAAC,CAAC,CAAC,EAAE;QACjFL,OAAO,CAACO,IAAI,CAACJ,IAAI,CAAC;MACpB,CAAC,MAAM,IAAIN,YAAY,KAAK,MAAM,IAAID,WAAW,EAAE;QACjD,MAAMY,IAAI,GAAGL,IAAI,CAACK,IAAc;QAChC,IAAIA,IAAI,GAAGC,QAAQ,CAACb,WAAW,EAAE,EAAE,CAAC,EAAE;UACpCI,OAAO,CAACO,IAAI,CAACJ,IAAI,CAAC;QACpB;MACF,CAAC,MAAM,IAAIL,iBAAiB,KAAK,SAAS,IAAIK,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEO,WAAW,IAAIZ,iBAAiB,MAAKK,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,WAAW,GAAE;QAC1GV,OAAO,CAACO,IAAI,CAACJ,IAAI,CAAC;MACpB,CAAC,MAAM,IAAI,CAACP,WAAW,KAAKE,iBAAiB,KAAK,SAAS,IAAIA,iBAAiB,KAAKC,SAAS,CAAC,EAAE;QAC/FC,OAAO,CAACO,IAAI,CAACJ,IAAI,CAAC;MACpB;MAEA,IAAIA,IAAI,CAACQ,QAAQ,IAAIR,IAAI,CAACQ,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;QAC7C;QACA,IAAI,CAACZ,OAAO,CAACM,QAAQ,CAACH,IAAI,CAAC,EAAE;UAC3BF,QAAQ,CAACE,IAAI,CAACQ,QAAQ,CAAC;QACzB;MACF;IACF;EACF;EAEAV,QAAQ,CAACN,QAAQ,CAACgB,QAAQ,CAAC;EAC3B,OAAO;IACLE,IAAI,EAAElB,QAAQ,CAACkB,IAAI;IACnBL,IAAI,EAAEb,QAAQ,CAACa,IAAI;IACnBG,QAAQ,EAAEX,OAAuC;IACjDc,KAAK,EAAE;EACT,CAAC,CAAC,CAAC;AACL;;AAEA;AACA,OAAO,MAAMC,KAAK,GAAG;EACnBrB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}