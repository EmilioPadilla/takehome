{"ast":null,"code":"var _jsxFileName = \"/Users/emilio.padilla/Library/Mobile Documents/com~apple~CloudDocs/Documents/Trabajo/PredictAP/takehome/FrontEnd-React/src/components/SearchBar/SearchBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  onSearch,\n  type\n}) => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const handleSearch = () => {\n    onSearch(searchQuery);\n  };\n\n  // Instead of using the onClick method, we can use the useEffect hook to call the onSearch method when the searchQuery changes\n  useEffect(() => {\n    handleSearch();\n  }, [searchQuery, onSearch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"search-bar-label\",\n      htmlFor: \"search-bar-input\",\n      children: [\"Filter by \", type === 'name' ? 'name' : 'size (bytes) less than']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: `${type === 'name' ? 'text' : 'number'}`,\n      className: \"search-bar-input\",\n      placeholder: `${type === 'name' ? 'example.pdf' : '1000 bytes'}`,\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"ZlE38MP8gSRb1z02FKWSofN9WRw=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SearchBar","onSearch","type","_s","searchQuery","setSearchQuery","handleSearch","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/emilio.padilla/Library/Mobile Documents/com~apple~CloudDocs/Documents/Trabajo/PredictAP/takehome/FrontEnd-React/src/components/SearchBar/SearchBar.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './SearchBar.css';\n\ninterface SearchBarProps {\n  onSearch: (query: string) => void;\n  type: 'name' | 'size'\n}\n\nconst SearchBar = ({ onSearch, type } : SearchBarProps) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearch = () => {\n    onSearch(searchQuery);\n  };\n\n  // Instead of using the onClick method, we can use the useEffect hook to call the onSearch method when the searchQuery changes\n  useEffect(() => {\n    handleSearch()\n  }, [searchQuery, onSearch]);\n\n  return (\n    <div className=\"search-bar\">\n      <label className=\"search-bar-label\" htmlFor=\"search-bar-input\">Filter by {type === 'name' ? 'name' : 'size (bytes) less than'}</label>\n      <input\n        type={`${type === 'name' ? 'text' : 'number'}`}\n        className='search-bar-input'\n        placeholder={`${type === 'name' ? 'example.pdf' : '1000 bytes'}`}\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default SearchBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAsB,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzBL,QAAQ,CAACG,WAAW,CAAC;EACvB,CAAC;;EAED;EACAR,SAAS,CAAC,MAAM;IACdU,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACF,WAAW,EAAEH,QAAQ,CAAC,CAAC;EAE3B,oBACEF,OAAA;IAAKQ,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBT,OAAA;MAAOQ,SAAS,EAAC,kBAAkB;MAACE,OAAO,EAAC,kBAAkB;MAAAD,QAAA,GAAC,YAAU,EAACN,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG,wBAAwB;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtId,OAAA;MACEG,IAAI,EAAG,GAAEA,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG,QAAS,EAAE;MAC/CK,SAAS,EAAC,kBAAkB;MAC5BO,WAAW,EAAG,GAAEZ,IAAI,KAAK,MAAM,GAAG,aAAa,GAAG,YAAa,EAAE;MACjEa,KAAK,EAAEX,WAAY;MACnBY,QAAQ,EAAGC,CAAC,IAAKZ,cAAc,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACV,EAAA,CAxBIH,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}